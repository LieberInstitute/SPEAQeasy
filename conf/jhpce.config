/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 *  Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 * 
 *
 * In order to customize the cluster environment for sge-large,
 * simply change the cpu and memory available to the executor
 * as well as each task below
 */


process {

  executor = 'sge'
  penv = 'local'

  disk = '2.GB'
  cpus = { 1 * task.attempt }
  memory = { 2.GB * task.attempt }
  time = { 2.hour * task.attempt }
  errorStrategy = { task.exitStatus == 140 ? 'retry' : 'terminate' }

  maxRetries = '3'
  maxErrors = '-1'

  withName: pullGENCODEassemblyfa {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: buildHISATindex {
    cpus = 4
    memory = 30.GB
    disk = ''
    module = 'hisat2/2.0.4'
    clusterOptions = '-l h_vmem=30G -R y'
  }
  withName: pullGENCODEgtf {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: buildPrepBED {
    cpus = { 4 * task.attempt }
    memory = 10.GB
    disk = ''
    module = 'conda_R/3.5.x'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: pullGENCODEtranscripts {
    cpus = 1
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: buildSALMONindex  {
    cpus = { 1 * task.attempt }
    memory = 50.GB
    disk = ''
    module = 'salmon/0.8.2'
    clusterOptions = '-l h_vmem=50G'
  }
  withName: Merging {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: ERCC {
    cpus = 4
    memory = 5.GB
    disk = ''
    module = 'kallisto/0.43.0'
    clusterOptions = '-l h_vmem=5G'
  }
  withName: IndividualManifest {
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: Manifest {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: QualityUntrimmed { 
    cpus = { 1 + 1 * task.attempt }
    memory = 10.GB
    disk = ''
    module = 'fastqc/0.11.5'
    clusterOptions = '-l h_vmem=10G'
  }
  withName: AdaptiveTrimSingleReads {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: AdaptiveTrimPairedReads {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    clusterOptions = '-l h_vmem=2G'
  }
  withName: Trimming {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'trimmomatic/0.36'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: QualityTrimmed {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    module = 'fastqc/0.11.5'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: SingleEndHISAT {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'hisat2/2.1.0'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: PairedEndNoTrimHISAT {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'hisat2/2.0.4'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: PairedEndTrimmedHISAT {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'hisat2/2.0.4'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: SamtoBam {
    cpus = 4
    memory = 5.GB
    disk = ''
    module = 'samtools/1.3.1'
    clusterOptions = '-l h_vmem=5G -R y'
  }
  withName: InferExperiment {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    module = 'rseqc/2.6.4'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: InferStrandness {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    module = 'conda_R/3.5.x'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: FeatureCounts {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'featurecounts/1.5.0-p3'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: PrimaryAlignments {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'samtools/1.3.1'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: Junctions {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    module = 'python/2.7.9:regtools/0.3.0'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: Coverage {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'python/2.7.9:rseqc/2.6.4:ucsctools'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: WigToBigWig {
    cpus = 1
    memory = 2.GB
    disk = ''
    module = 'ucsctools'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: MeanCoverage {
    cpus = 8
    memory = 60.GB
    disk = ''
    module = 'wiggletools/1.2.1:ucsctools'
    clusterOptions = '-l h_vmem=30G -R y'
  }
  withName: TXQuant {
    cpus = 2
    memory = 60.GB
    disk = ''
    module = 'salmon/0.8.2'
    clusterOptions = '-l h_vmem=60G -R y'
  }
  withName: CountObjects {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'conda_R/3.5.x'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: CoverageObjects {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'conda_R/3.5.x'
    clusterOptions = '-l h_vmem=10G -R y'
  }
  withName: VariantCalls {
    cpus = { 1 + task.attempt }
    memory = 2.GB
    disk = ''
    module = 'samtools/1.3.1:bcftools/1.3.1:htslib/1.2.1'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: VariantsMerge {
    cpus = { 1 * task.attempt }
    memory = 2.GB
    disk = ''
    module = 'vcftools/0.1.15:htslib/1.2.1'
    clusterOptions = '-l h_vmem=2G'
  }
  withName: ExpressedRegions {
    cpus = 4
    memory = 10.GB
    disk = ''
    module = 'conda_R/3.5.x'
    clusterOptions = '-l h_vmem=10G -R y'
  }
}
