/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 *  Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 * Assumes the local environment has 16G of memory and
 * 8 CPUs
 */


docker {
  enabled = true
  temp = 'auto'
}

process {

//  executor = 'local'

  $pullGENCODEassemblyfa {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $buildHISATindex {
    container = 'libddocker/hisat2-2.0.4:latest'
  }
  $pullGENCODEgtf {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $buildPrepBED {
    container = 'libddocker/r3.4.3_base:latest'
  }
  $pullGENCODEtranscripts {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $buildSALMONindex  {
    container = 'libddocker/salmon-0.9.1:latest'
  }
  $Merging {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $ERCC {
    container = 'libddocker/kallisto_v0.43.1:latest'
  }
  $IndividualManifest {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $Manifest {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $QualityUntrimmed { 
    container = 'libddocker/fastqc_v0.11.5:latest'
  }
  $AdaptiveTrimSingleReads {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $AdaptiveTrimPairedReads {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  $Trimming {
    container = 'libddocker/trimmomatic-0.36:latest'
  }
  $QualityTrimmed {
    container = 'libddocker/fastqc_v0.11.5:latest'
  }
  $SingleEndHISAT {
    container = 'libddocker/hisat2-2.0.4:latest'
  }
  $PairedEndNoTrimHISAT {
    container = 'libddocker/hisat2-2.0.4:latest'
  }
  $PairedEndTrimmedHISAT {
    container = 'libddocker/hisat2-2.0.4:latest'
  }
  $SamtoBam {
    container = 'libddocker/samtools-1.3.1:latest'
  }
  $InferExperiment {
    container = 'libddocker/rseqc-v2.6.4:latest'
  }
  $InferStrandness {
    container = 'libddocker/r3.4.3_base:latest'
  }
  $FeatureCounts {
    container = 'libddocker/subread-1.6.0:latest'
  }
  $PrimaryAlignments {
    container = 'libddocker/samtools-1.3.1:latest'
  }
  $Junctions {
    container = 'libddocker/regtools-0.3.0:latest'
  }
  $Coverage {
    container = 'libddocker/rseqc-v2.6.4:latest'
  }
  $WigToBigWig {
    container = 'libddocker/wiggletools-1.2:latest'
  }
  $MeanCoverage {
    container = 'libddocker/wiggletools-1.2:latest'
  }
  $TXQuant {
    container = 'libddocker/salmon-0.9.1:latest'
  }
  $CountObjects {
    container = 'libddocker/r3.4.3_base:latest'
  }
  $CoverageObjects {
    container = 'libddocker/r3.4.3_base:latest'
  }
  $VariantCalls {
    container = 'libddocker/bcftools-1.3.1:latest'
  }
  $VariantsMerge {
    container = 'libddocker/vcftools-v0.1.15:latest'
  }
  $ExpressedRegions {
    container = 'libddocker/r3.4.3_base:latest'
  }
}
