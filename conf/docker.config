/*
vim: syntax=groovy
-*- mode: groovy;-*-
 *
 *  Config specifying everything sufficient to run the pipeline
 *  using docker containers. To include specification related to
 *  the execution environment, consider additionally including
 *  slurm.config, sge.config, or sge_large.config.
 *
 */


docker {
  enabled = true
  temp = 'auto'
  runOptions = '-u $(id -u):$(id -g)'
}

params {
  gencode_version_human = 25
  gencode_version_mouse = "M11"
  ensembl_version_rat = "98"
  anno_build = "main" // main or primary (main is canonical seqs only)
  
  num_reads_infer_strand = 2000000
  salmon_min_read_len = 31
  min_intron_len = 20
  bam2wig_depth_thres = 4000000000
  samtools_min_map_q = 0
  samtools_min_base_q = 13
  samtools_max_depth = 1000000
  kallisto_len_mean = 200
  kallisto_len_sd = 30
  trim_clip_single = "2:30:10"
  trim_clip_paired = "2:30:10:1:TRUE"
  trim_lead = 3
  trim_trail = 3
  trim_slide_window = "4:15"
  trim_min_len = 75
  feat_counts_gene_opts = ""
  feat_counts_exon_opts = "-O"
}

process {

  withName: PullAssemblyFasta {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  withName: buildHISATindex {
    //container = 'libddocker/hisat2-2.0.4:latest'
    container = 'kapeel/hisat2:v2.1'
  }
  withName: PullGtf {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  withName: PullTranscriptFasta {
    container = 'libddocker/ubuntu16.04_base:latest'
  }
  withName: buildSALMONindex  {
    container = 'libddocker/salmon-0.9.1:latest'
  }
  withName: BuildKallistoIndex {
    //container = 'libddocker/kallisto_v0.43.1:latest'
    container = 'zlskidmore/kallisto:0.46.0'
  }
  withName: PreprocessInputs {
    container = 'libddocker/r_3.6.1_bioc'
  }
  withName: BuildAnnotationObjects {
    container = 'libddocker/r_3.6.1_bioc'
  }
  withName: CompleteManifest {
    container = 'libddocker/r_3.6.1_bioc'
  }
  withName: ERCC {
    //container = 'libddocker/kallisto_v0.43.1:latest'
    container = 'zlskidmore/kallisto:0.46.0'
  }
  withName: QualityUntrimmed {
    container = 'libddocker/fastqc_v0.11.5:latest'
    //container = 'biocontainers/fastqc:v0.11.8dfsg-2-deb_cv1'
  }
  withName: Trimming {
    //container = 'libddocker/trimmomatic-0.36:latest'
    container = 'davelabhub/trimmomatic:0.39--1'
  }
  withName: QualityTrimmed {
    container = 'libddocker/fastqc_v0.11.5:latest'
    //container = 'biocontainers/fastqc:v0.11.8dfsg-2-deb_cv1'
  }
  withName: SingleEndHISAT {
    //container = 'libddocker/hisat2-2.0.4:latest'
    container = 'kapeel/hisat2:v2.1'
  }
  withName: PairedEndHISAT {
    //container = 'libddocker/hisat2-2.0.4:latest'
    container = 'kapeel/hisat2:v2.1'
  }
  withName: SamtoBam {
    //container = 'libddocker/samtools-1.3.1:latest'
    container = 'biocontainers/samtools:v1.9-4-deb_cv1'
  }
  withName: InferStrandness {
    container = 'libddocker/infer_strandness:latest'
  }
  withName: FeatureCounts {
    //container = 'libddocker/subread-1.6.0:latest'
    container = 'welliton/subread:2.0.0'
  }
  withName: PrimaryAlignments {
    //container = 'libddocker/samtools-1.3.1:latest'
    container = 'biocontainers/samtools:v1.9-4-deb_cv1'
  }
  withName: Junctions {
    container = 'libddocker/regtools-0.3.0:latest'
  }
  withName: Coverage {
    container = 'libddocker/rseqc-v2.6.4:latest'
  }
  withName: WigToBigWig {
    container = 'libddocker/wiggletools-1.2:latest'
  }
  withName: MeanCoverage {
    container = 'libddocker/wiggletools-1.2:latest'
  }
  withName: TXQuantSalmon {
    container = 'libddocker/salmon-0.9.1:latest'
  }
  withName: TXQuantKallisto {
    //container = 'libddocker/kallisto_v0.43.1:latest'
    container = 'zlskidmore/kallisto:0.46.0'
  }
  withName: CountObjects {
    container = 'libddocker/r_3.6.1_bioc'
  }
  withName: CoverageObjects {
    container = 'libddocker/r_3.6.1_bioc'
  }
  withName: VariantCalls {
    container = 'libddocker/bcftools-1.3.1:latest'
  }
  withName: VariantsMerge {
    container = 'libddocker/vcftools-v0.1.15:latest'
  }
  withName: ExpressedRegions {
    container = 'libddocker/r_3.6.1_bioc'
  }
}
